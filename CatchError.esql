-- ************************************************************************************ --
-- Developer         : Alaa Ahmed												    --
-- Date              : 27/06/2006													    --
-- Version           : 1.00																--
-- Implementation ID : 1.20															--
-- Comments			 : Updated by Alaa ahmed on 06/07/2006																	--
-- ************************************************************************************ --



CREATE FILTER MODULE "CatchError_DB_Error?"
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
RETURN 
Environment.Variables.HADBErrorFlag IS NOT NULL AND Environment.Variables.HADBErrorFlag = '1';
END;

END MODULE;


CREATE COMPUTE MODULE CatchError_CopyMessage
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
DECLARE I INTEGER;
SET I = 1;
WHILE I < CARDINALITY(InputRoot.*[]) DO
	SET OutputRoot.*[I] = InputRoot.*[I];
	SET I=I+1;
END WHILE;
SET OutputRoot.XMLNSC = Environment.MessageBody;
RETURN true;
END;

END MODULE;

CREATE FILTER MODULE "CatchError_Rollback?"
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
RETURN 
Environment.Variables.Rollback IS NOT NULL AND Environment.Variables.Rollback = 'Y';
END;

END MODULE;

CREATE FILTER MODULE "CatchError_BackoutCount=0?"
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
RETURN 

Root.MQMD.BackoutCount = 0;
END;

END MODULE;

CREATE FILTER MODULE "CatchError_NoReplyRequired?"
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
RETURN 
SUBSTRING(Root.MQMD.ReplyToQ FROM 1 FOR 3) = '   ';
END;

END MODULE;

CREATE COMPUTE MODULE "CatchError_BuildHeader"
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
	CALL CopyMessageHeaders();
	--	CALL CopyEntireMessage();
	Set OutputRoot.XMLNSC.EAIMessage.EAIHeader				=	InputRoot.XMLNSC.EAIMessage.EAIHeader;
	Set OutputRoot.XMLNSC.EAIMessage.EAIHeader.EAIRtrnCd	=	'999999';
	RETURN TRUE;
END;
CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;




CREATE COMPUTE MODULE CatchError_Compute_SetBackoutQueue
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET OutputDestinationList.Destination.MQDestinationList.DestinationData.queueManagerName 	= '';
		SET OutputDestinationList.Destination.MQDestinationList.DestinationData.queueName 			= 
		COALESCE(NULLIF(Trim(Environment.Variables.FlowProperties.Backout_Queue),''),'Common_Backout');

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE FILTER MODULE Catch_Error_DumpRequired
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		set Environment.Variables.Dump_Msg_Tp = 'REQ';
		return 
		Environment.Variables.FlowProperties.Dump_Flg is not null
		AND UPPER(Environment.Variables.FlowProperties.Dump_Flg) in ( 'Q','A')
		AND Root.MQMD.BackoutCount = 0;
	END;

END MODULE;

CREATE FILTER MODULE "CatchError_XMLNSC?"
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
RETURN 
SUBSTRING(Root.BLOB.BLOB FROM 1 FOR 1) = X'3C';
END;

END MODULE;

CREATE COMPUTE MODULE CatchError_BLOBToXMLNSC
	CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
SET OutputRoot = InputRoot;

SET OutputRoot.Properties.MessageDomain = 'XMLNSC';
SET OutputRoot.Properties.MessageFormat = 'XMLNSC';

SET Environment.Variables.Message = InputRoot.XMLNSC.*[1];  -- Remove Parent

SET OutputRoot.XMLNSC 				= Environment.Variables.Message.Body;
SET OutputRoot.XMLNSC.EAIHeader 	= Environment.Variables.Message.EAIHeader;
SET OutputRoot.XMLNSC.EAIHeader.UsrDfn	= InputRoot.XMLNSC.*.EAIHeader.UsrDfn;
SET Environment.Variables.Message = Null;
RETURN true;
END;

END MODULE;


CREATE COMPUTE MODULE CatchError_MRMToXMLNSC
	CREATE FUNCTION main() RETURNS BOOLEAN BEGIN
DECLARE I INTEGER;
SET I = 1;
WHILE I < CARDINALITY(InputRoot.*[]) DO
	SET OutputRoot.*[I] = InputRoot.*[I];
	SET I=I+1;
END WHILE;


SET OutputRoot.Properties.MessageDomain = 'XMLNSC';
SET OutputRoot.Properties.MessageFormat = 'XMLNSC';
SET OutputRoot.XMLNSC = InputBody;
RETURN true;
END;

END MODULE;


CREATE COMPUTE MODULE CatchError_DumpMessage_Truncate
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE FILTER MODULE "CatchError_XML?"
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		RETURN TRUE;
	END;

END MODULE;
